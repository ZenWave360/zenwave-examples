<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>io.github.zenwave360.examples</groupId>
		<artifactId>zenwave-examples</artifactId>
		<version>0.9.3-SNAPSHOT</version>
		<relativePath>../..</relativePath>
	</parent>
	<artifactId>asyncapi-scs-generator-skeleton</artifactId>
	<name>${pom.groupId}:${pom.artifactId}</name>

	<properties>
		<skipTests>true</skipTests>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-mongodb</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.kafka</groupId>
			<artifactId>kafka-streams</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-stream</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-stream-binder-kafka-streams</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
			<version>${mapstruct.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.avro</groupId>
			<artifactId>avro</artifactId>
			<version>${avro.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>de.flapdoodle.embed</groupId>
			<artifactId>de.flapdoodle.embed.mongo</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-stream</artifactId>
			<scope>test</scope>
			<classifier>test-binder</classifier>
			<type>test-jar</type>
		</dependency>

		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>junit-jupiter</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>kafka</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>mongodb</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>io.github.zenwave360.zenwave-code-generator</groupId>
				<artifactId>zenwave-code-generator-mojo</artifactId>
				<version>${zenwave.version}</version>
				<configuration>
					<addCompileSourceRoot>true</addCompileSourceRoot>
				</configuration>
				<executions>
					<execution>
						<id>generate-asyncapi-producer</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<generatorName>spring-cloud-streams3</generatorName>
							<inputSpec>classpath:model/asyncapi.yml</inputSpec>
							<configOptions>
								<role>provider</role>
								<style>imperative</style>
								<apiPackage>io.zenwave360.example.core.events.provider.outbox.none</apiPackage>
								<modelPackage>io.zenwave360.example.core.events.model</modelPackage>
							</configOptions>
						</configuration>
					</execution>
					<execution>
						<id>generate-asyncapi-producer-outbox-mongodb</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<generatorName>spring-cloud-streams3</generatorName>
							<inputSpec>classpath:model/asyncapi.yml</inputSpec>
							<configOptions>
								<role>provider</role>
								<style>imperative</style>
								<transactionalOutbox>mongodb</transactionalOutbox>
								<apiPackage>io.zenwave360.example.core.events.provider.outbox.mongodb</apiPackage>
								<modelPackage>io.zenwave360.example.core.events.model</modelPackage>
							</configOptions>
						</configuration>
					</execution>
					<execution>
						<id>generate-asyncapi-producer-outbox-jdbc</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<generatorName>spring-cloud-streams3</generatorName>
							<inputSpec>classpath:model/asyncapi.yml</inputSpec>
							<configOptions>
								<role>provider</role>
								<style>imperative</style>
								<transactionalOutbox>jdbc</transactionalOutbox>
								<apiPackage>io.zenwave360.example.core.events.provider.outbox.jdbc</apiPackage>
								<modelPackage>io.zenwave360.example.core.events.model</modelPackage>
							</configOptions>
						</configuration>
					</execution>
					<execution>
						<id>generate-asyncapi-producer-dtos</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<generatorName>jsonschema2pojo</generatorName>
							<inputSpec>${pom.basedir}/src/main/resources/model/asyncapi.yml</inputSpec>
							<configOptions>
								<modelPackage>io.zenwave360.example.core.events.model</modelPackage>
							</configOptions>
						</configuration>
					</execution>
					<execution>
						<id>generate-asyncapi-producer-avro</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<generatorName>spring-cloud-streams3</generatorName>
							<inputSpec>${pom.basedir}/src/main/resources/model/asyncapi-avro.yml</inputSpec>
							<configOptions>
								<role>provider</role>
								<style>imperative</style>
								<apiPackage>io.zenwave360.example.core.events.provider.avro</apiPackage>
							</configOptions>
						</configuration>
					</execution>

					<execution>
						<id>generate-asyncapi-client-imperative</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<generatorName>spring-cloud-streams3</generatorName>
							<inputSpec>${pom.basedir}/src/main/resources/model/asyncapi.yml</inputSpec>
							<configOptions>
								<role>client</role>
								<style>imperative</style>
								<apiPackage>io.zenwave360.example.core.events.client.imperative</apiPackage>
								<modelPackage>io.zenwave360.example.core.events.model</modelPackage>
							</configOptions>
						</configuration>
					</execution>
					<execution>
						<id>generate-asyncapi-client-reactive</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<generatorName>spring-cloud-streams3</generatorName>
							<inputSpec>${pom.basedir}/src/main/resources/model/asyncapi.yml</inputSpec>
							<configOptions>
								<role>client</role>
								<style>reactive</style>
								<apiPackage>io.zenwave360.example.core.events.client.reactive</apiPackage>
								<modelPackage>io.zenwave360.example.core.events.model</modelPackage>
							</configOptions>
						</configuration>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>io.github.zenwave360.zenwave-code-generator.plugins</groupId>
						<artifactId>asyncapi-spring-cloud-streams3</artifactId>
						<version>${zenwave.version}</version>
					</dependency>
					<dependency>
						<groupId>io.github.zenwave360.zenwave-code-generator.plugins</groupId>
						<artifactId>asyncapi-jsonschema2pojo</artifactId>
						<version>${zenwave.version}</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.apache.avro</groupId>
				<artifactId>avro-maven-plugin</artifactId>
				<version>${avro.version}</version>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>schema</goal>
						</goals>
						<configuration>
							<sourceDirectory>src/main/resources/model/avro</sourceDirectory>
							<outputDirectory>target/generated-sources/avro/src/main/java</outputDirectory>
							<includes>
								<include>*.avsc</include>
							</includes>
							<imports>
								<import>${project.basedir}/src/main/resources/model/avro/RequestType.avsc</import>
								<import>${project.basedir}/src/main/resources/model/avro/EventType.avsc</import>
								<import>${project.basedir}/src/main/resources/model/avro/Customer.avsc</import>
								<import>${project.basedir}/src/main/resources/model/avro/PaymentDetails.avsc</import>
								<import>${project.basedir}/src/main/resources/model/avro/ShippingDetails.avsc</import>
								<import>${project.basedir}/src/main/resources/model/avro/OrderedItem.avsc</import>
								<import>${project.basedir}/src/main/resources/model/avro/OrderStatus.avsc</import>
								<import>${project.basedir}/src/main/resources/model/avro/CustomerOrder.avsc</import>
								<import>${project.basedir}/src/main/resources/model/avro/CustomerOrderSearchCriteria.avsc</import>
							</imports>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>3.2.0</version>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${project.basedir}/target/generated-sources/avro/src/main/java/</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>

<!--			<plugin>-->
<!--				<groupId>net.coru</groupId>-->
<!--				<artifactId>scs-multiapi-maven-plugin</artifactId>-->
<!--				<version>4.1.0</version>-->
<!--				<executions>-->
<!--					<execution>-->
<!--						<phase>generate-sources</phase>-->
<!--						<goals>-->
<!--							<goal>asyncapi-generation</goal>-->
<!--						</goals>-->
<!--						<configuration>-->
<!--							<specFiles>-->
<!--								<specFile>-->
<!--									<filePath>C:\Users\ivan.garcia\workspace\zenwave\zenwave-examples\spring-boot-mongo-elasticsearch\src\main\resources\model\asyncapi.yml</filePath>-->
<!--									<consumer>-->
<!--										<ids>onCustomerEvent</ids>-->
<!--										<classNamePostfix>MY_CONSUMER_CLASS</classNamePostfix>-->
<!--										<modelNameSuffix>DTO</modelNameSuffix>-->
<!--										<apiPackage>net.coru.apigenerator.asyncapi.business_model.model.event.consumer</apiPackage>-->
<!--										<modelPackage>net.coru.apigenerator.asyncapi.business_model.model.event</modelPackage>-->
<!--									</consumer>-->
<!--									<supplier>-->
<!--										<ids>onCustomerOrderEvent</ids>-->
<!--										<apiPackage>net.coru.apigenerator.asyncapi.business_model.model.event.producer</apiPackage>-->
<!--										<modelPackage>net.coru.apigenerator.asyncapi.business_model.model.event</modelPackage>-->
<!--									</supplier>-->
<!--								</specFile>-->
<!--							</specFiles>-->
<!--							<generatedSourcesFolder>sources-generated</generatedSourcesFolder>-->
<!--						</configuration>-->
<!--					</execution>-->
<!--				</executions>-->
<!--			</plugin>-->
		</plugins>
	</build>


</project>
